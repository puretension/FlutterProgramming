# Provider & JsonSerializable
Provider: 플러터에서 상태 관리 패키지 중 하나로, 상태를 관리하고 공유하기 위한 방법을 제공하며 다양한 Provider를 사용하면 상태 관리를 효율적으로 할 수 있다.
JsonSerializable: 플러터에서 모델 클래스를 직렬화하고 역직렬화하기 위해 사용하는 패키지. Dart 클래스를 JSON 데이터로 변환하거나 JSON 데이터를 Dart 클래스로 변환하는 데 도움을 준다.
## Retrofit & Dio Interceptor
Retrofit: 플러터에서 네트워크 요청을 쉽게 처리할 수 있도록 도와주는 HTTP 클라이언트 라이브러리. RESTful API를 사용하는 앱을 개발할 때 유용하다.
Dio Interceptor: Dio는 또 다른 플러터용 HTTP 클라이언트 라이브러리입니다. Interceptor는 네트워크 요청과 응답을 가로채고 수정하는 데 사용되며, 예를 들어 헤더를 추가하거나 에러 처리를 할 때 사용된다.
## Pagination & Data Modeling
Pagination: 앱에서 많은 양의 데이터를 처리할 때 데이터를 페이지로 나누어 처리하는 기술로 사용자 경험을 향상시키고 데이터 로딩을 최적화하는 데 도움이 된다.
DataModeling: 데이터 모델링은 앱에서 사용할 데이터를 구조화하고 표현하는 과정. 데이터 모델은 앱의 각 요소 간에 데이터를 교환하고 처리하는 데 사용된다.
## Cache & Code Generation
Cache: 앱의 성능을 향상시키기 위해 데이터를 로컬에 저장하는 것을 의미하며 네트워크 요청을 줄이고 데이터 로딩 속도를 개선하는 데 도움이 됩니다.
Code Generation: 코드 생성은 주로 반복적이고 번거로운 작업을 자동화하기 위해 사용된다. 플러터에서는 코드 생성을 통해 모델 클래스를 자동으로 생성하거나 라우팅 코드를 생성할 수 있다.
## GoRouter & Authentication Logic
GoRouter: 플러터 앱의 네비게이션을 관리하기 위한 라우팅 패키지 중 하나. 앱 내에서 화면 간 이동을 관리하는 데 도움이 된다.
Authentication Logic: 인증 로직은 사용자가 앱에 로그인하거나 인증을 통해 접근 권한을 얻는 등의 프로세스를 다루는 개념. 사용자 인증은 보안과 사용자 경험을 고려해야 하는 중요한 부분이다.


1. Provider: 플러터에서 상태 관리 패키지 중 하나로, 상태를 관리하고 공유하기 위한 방법을 제공하며 다양한 Provider를 사용하면 상태 관리를 효율적으로 할 수 있다.
2. JsonSerializable: 플러터에서 모델 클래스를 직렬화하고 역직렬화하기 위해 사용하는 패키지. Dart 클래스를 JSON 데이터로 변환하거나 JSON 데이터를 Dart 클래스로 변환하는 데 도움을 준다.
3. Retrofit: 플러터에서 네트워크 요청을 쉽게 처리할 수 있도록 도와주는 HTTP 클라이언트 라이브러리. RESTful API를 사용하는 앱을 개발할 때 유용하다.
4. Dio Interceptor: Dio는 또 다른 플러터용 HTTP 클라이언트 라이브러리입니다. Interceptor는 네트워크 요청과 응답을 가로채고 수정하는 데 사용되며, 예를 들어 헤더를 추가하거나 에러 처리를 할 때 사용됩니다.
5. Pagination: 앱에서 많은 양의 데이터를 처리할 때 데이터를 페이지로 나누어 처리하는 기술로 사용자 경험을 향상시키고 데이터 로딩을 최적화하는 데 도움이 된다.
6. DataModeling: 데이터 모델링은 앱에서 사용할 데이터를 구조화하고 표현하는 과정. 데이터 모델은 앱의 각 요소 간에 데이터를 교환하고 처리하는 데 사용된다.
7. Cache: 앱의 성능을 향상시키기 위해 데이터를 로컬에 저장하는 것을 의미하며 네트워크 요청을 줄이고 데이터 로딩 속도를 개선하는 데 도움이 됩니다.
8. Code Generation: 코드 생성은 주로 반복적이고 번거로운 작업을 자동화하기 위해 사용된다. 플러터에서는 코드 생성을 통해 모델 클래스를 자동으로 생성하거나 라우팅 코드를 생성할 수 있다.
9. GoRouter: 플러터 앱의 네비게이션을 관리하기 위한 라우팅 패키지 중 하나. 앱 내에서 화면 간 이동을 관리하는 데 도움이 된다.
10. Authentication Logic: 인증 로직은 사용자가 앱에 로그인하거나 인증을 통해 접근 권한을 얻는 등의 프로세스를 다루는 개념. 사용자 인증은 보안과 사용자 경험을 고려해야 하는 중요한 부분이다.
